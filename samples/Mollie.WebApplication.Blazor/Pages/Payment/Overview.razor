@page "/payment/overview"
@using Mollie.Api.Models.List.Response

@inject IPaymentClient PaymentClient

<h3>Payments</h3>

@if (_payments == null) {
    <p>Loading...</p>
}
else {
    <div class="clearfix">
        <a href="/payment/create" class="btn btn-primary float-right">Create new payment</a>
    </div>

    <table class="table table-striped">
        <thead>
        <tr>
            <th scope="col">#</th>
            <th scope="col">Date created</th>
            <th scope="col">Amount</th>
            <th scope="col">Status</th>
            <th scope="col">Method</th>
            <th scope="col">Metadata</th>
            <th scope="col">Actions</th>
        </tr>
        </thead>
        <tbody>
        @foreach (PaymentResponse payment in _payments.Items) {
            <tr>
                <td>@payment.Id</td>
                <td>@payment.CreatedAt</td>
                <td>@payment.Amount.ToString()</td>
                <td>@payment.Status</td>
                <td>@payment.Method</td>
                <td>@payment.Metadata</td>
                <td>
                    @if (payment.Status == PaymentStatus.Open && @payment.Links.Checkout != null) {
                        <a href="@payment.Links.Checkout.Href" class="btn btn-outline-secondary" target="_blank">Pay</a>
                    }
                </td>
            </tr>
        }
        </tbody>
    </table>

    <OverviewNavigation
        Previous="_payments.Links.Previous"
        Next="_payments.Links.Next">
    </OverviewNavigation>
}

@code {
    [Parameter]
    [SupplyParameterFromQuery]
    public string? Url { get; set; }

    private ListResponse<PaymentResponse>? _payments;

    protected override async Task OnParametersSetAsync() {
        await LoadData();
    }

    private async Task LoadData() {
        if (string.IsNullOrEmpty(Url)) {
            _payments = await PaymentClient.GetPaymentListAsync();
        }
        else {
            _payments = await PaymentClient.GetPaymentListAsync(new UrlObjectLink<ListResponse<PaymentResponse>>() {
                Href = Url,
                Type = "application/json"
            });
        }
    }
}
