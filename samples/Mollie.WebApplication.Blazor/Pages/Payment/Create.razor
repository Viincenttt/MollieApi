@page "/payment/create"

@using Mollie.Api.Models.Payment.Request
@using Mollie.WebApplication.Blazor.Models.Payment
@using Mollie.Api.Client

@inject IPaymentClient PaymentClient
@inject NavigationManager NavigationManager

<h3>Create new payment</h3>

<ApiExceptionDisplay Exception="_apiException"></ApiExceptionDisplay>

<EditForm Model="_model" OnValidSubmit="@OnSave" class="col-md-6">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="amount">Amount</label>
        <InputNumber
            id="amount"
            class="form-control"
            @bind-Value="_model.Amount">
        </InputNumber>
    </div>

    <div class="form-group">
        <label for="currency">Currency</label>
        <InputSelect
            id="currency"
            class="form-control"
            @bind-Value="_model.Currency">
            @foreach (string currency in StaticStringListBuilder.GetStaticStringList(typeof(Currency))) {
                <option value="@currency">@currency</option>
            }
        </InputSelect>
    </div>

    <div class="form-group">
        <label for="redirect-url">Redirect url</label>
        <InputText
            id="redirect-url"
            class="form-control"
            @bind-Value="_model.RedirectUrl">
        </InputText>
    </div>

        <div class="form-group">
            <label for="redirect-url">Webhook url</label>
            <InputText
                id="redirect-url"
                class="form-control"
                @bind-Value="_model.WebhookUrl">
            </InputText>
        </div>

    <div class="form-group">
        <label for="description">Description</label>
        <InputText
            id="description"
            class="form-control"
            @bind-Value="_model.Description">
        </InputText>
    </div>

    <div class="form-group">
        <label for="sequence-type">Sequence type</label>
        <InputSelect
            id="sequence-type"
            class="form-control"
            @bind-Value="_model.SequenceType">
            @foreach (string sequenceType in StaticStringListBuilder.GetStaticStringList(typeof(SequenceType))) {
                <option value="@sequenceType">@sequenceType</option>
            }
        </InputSelect>
    </div>

    @if (_model.SequenceType == SequenceType.First || _model.SequenceType == SequenceType.Recurring)
    {
        <div class="form-group">
            <label for="customer">Customer</label>
            <InputText
                id="customer"
                class="form-control"
                @bind-Value="_model.CustomerId">
            </InputText>
        </div>

        @if (_model.SequenceType == SequenceType.Recurring)
        {
            <div class="form-group">
                <label for="mandate">Mandate</label>
                <InputText
                    id="mandate"
                    class="form-control"
                    @bind-Value="_model.MandateId">
                </InputText>
            </div>
        }
    }

    <input type="submit" name="Save" value="Save" class="btn btn-primary mt-2"/>
</EditForm>

@code {
    private MollieApiException? _apiException;

    private CreatePaymentModel _model = new() {
        Amount = 10.00m,
        Currency = "EUR",
        RedirectUrl = "https://www.mollie.com/",
        WebhookUrl = null,
        Description = "A payment from the example application",
        SequenceType = SequenceType.OneOff
    };

    private async Task OnSave() {
        try {
            _apiException = null;

            await PaymentClient.CreatePaymentAsync(new PaymentRequest {
                Amount = new Amount(_model.Currency, _model.Amount),
                RedirectUrl = _model.RedirectUrl,
                WebhookUrl = _model.WebhookUrl,
                Description = _model.Description,
                CustomerId = _model.CustomerId,
                SequenceType = _model.SequenceType,
                MandateId = _model.MandateId
            });

            NavigationManager.NavigateTo("/payment/overview");
        }
        catch (MollieApiException e) {
            _apiException = e;
        }
    }
}
